{"ast":null,"code":"var _jsxFileName = \"/Users/Kirill/Front-end/Next.js/starWars/src/components/pages/people-page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ItemList from '../item-list';\nimport { ItemDetails, Record } from '../item-details';\nimport Row from '../row/row';\nimport withSwapi from '../hoc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leftElementMethods = swapi => ({\n  getData: swapi.getAllPeople\n});\nconst NewItemList = withSwapi(ItemList, leftElementMethods);\n_c = NewItemList;\nconst rightElemetMethods = swapi => ({\n  getData: swapi.getPerson,\n  getImage: swapi.getPersonImage\n});\nconst NewItemDetails = withSwapi(ItemDetails, rightElemetMethods);\n_c2 = NewItemDetails;\nconst PeoplePage = () => {\n  _s();\n  const [state, setState] = useState({\n    itemId: 1\n  });\n  const leftElement = /*#__PURE__*/_jsxDEV(NewItemList, {\n    setItemId: id => setState({\n      itemId: id\n    }),\n    children: item => `${item.name}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  const rightElement = /*#__PURE__*/_jsxDEV(NewItemDetails, {\n    itemId: state.itemId,\n    children: [/*#__PURE__*/_jsxDEV(Record, {\n      label: \"Gender:\",\n      label_key: \"gender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      label: \"Eye color:\",\n      label_key: \"eyeColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      label: \"Birth year:\",\n      label_key: \"birthYear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    left: leftElement,\n    right: rightElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PeoplePage, \"mFXDLHwe29eFC4++CPyWqV0Mcqw=\");\n_c3 = PeoplePage;\nexport default PeoplePage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NewItemList\");\n$RefreshReg$(_c2, \"NewItemDetails\");\n$RefreshReg$(_c3, \"PeoplePage\");","map":{"version":3,"names":["React","useState","ItemList","ItemDetails","Record","Row","withSwapi","leftElementMethods","swapi","getData","getAllPeople","NewItemList","rightElemetMethods","getPerson","getImage","getPersonImage","NewItemDetails","PeoplePage","state","setState","itemId","leftElement","id","item","name","rightElement"],"sources":["/Users/Kirill/Front-end/Next.js/starWars/src/components/pages/people-page.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ItemList from '../item-list';\nimport { ItemDetails, Record } from '../item-details';\nimport Row from '../row/row';\nimport withSwapi from '../hoc';\n\n\nconst leftElementMethods = (swapi) => ({ getData: swapi.getAllPeople })\nconst NewItemList = withSwapi(ItemList, leftElementMethods)\n\n\nconst rightElemetMethods = (swapi) => ({ getData: swapi.getPerson, getImage: swapi.getPersonImage })\nconst NewItemDetails = withSwapi(ItemDetails, rightElemetMethods)\n\n\nconst PeoplePage = () => {\n\n  const [state, setState] = useState({ itemId: 1 })\n\n  const leftElement = (\n    <NewItemList setItemId={(id) => setState({ itemId: id })}>\n      {(item) => `${item.name}`}\n    </NewItemList>\n  )\n\n  const rightElement = (\n    <NewItemDetails itemId={state.itemId}>\n      <Record label='Gender:' label_key='gender' />\n      <Record label='Eye color:' label_key='eyeColor' />\n      <Record label='Birth year:' label_key='birthYear' />\n    </NewItemDetails>\n  )\n\n  return (\n    <Row left={leftElement} right={rightElement} />\n  )\n\n}\n\nexport default PeoplePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,cAAc;AACnC,SAASC,WAAW,EAAEC,MAAM,QAAQ,iBAAiB;AACrD,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,SAAS,MAAM,QAAQ;AAAC;AAG/B,MAAMC,kBAAkB,GAAIC,KAAK,KAAM;EAAEC,OAAO,EAAED,KAAK,CAACE;AAAa,CAAC,CAAC;AACvE,MAAMC,WAAW,GAAGL,SAAS,CAACJ,QAAQ,EAAEK,kBAAkB,CAAC;AAAA,KAArDI,WAAW;AAGjB,MAAMC,kBAAkB,GAAIJ,KAAK,KAAM;EAAEC,OAAO,EAAED,KAAK,CAACK,SAAS;EAAEC,QAAQ,EAAEN,KAAK,CAACO;AAAe,CAAC,CAAC;AACpG,MAAMC,cAAc,GAAGV,SAAS,CAACH,WAAW,EAAES,kBAAkB,CAAC;AAAA,MAA3DI,cAAc;AAGpB,MAAMC,UAAU,GAAG,MAAM;EAAA;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,MAAM,EAAE;EAAE,CAAC,CAAC;EAEjD,MAAMC,WAAW,gBACf,QAAC,WAAW;IAAC,SAAS,EAAGC,EAAE,IAAKH,QAAQ,CAAC;MAAEC,MAAM,EAAEE;IAAG,CAAC,CAAE;IAAA,UACrDC,IAAI,IAAM,GAAEA,IAAI,CAACC,IAAK;EAAC;IAAA;IAAA;IAAA;EAAA,QAE5B;EAED,MAAMC,YAAY,gBAChB,QAAC,cAAc;IAAC,MAAM,EAAEP,KAAK,CAACE,MAAO;IAAA,wBACnC,QAAC,MAAM;MAAC,KAAK,EAAC,SAAS;MAAC,SAAS,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7C,QAAC,MAAM;MAAC,KAAK,EAAC,YAAY;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD,QAAC,MAAM;MAAC,KAAK,EAAC,aAAa;MAAC,SAAS,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEvD;EAED,oBACE,QAAC,GAAG;IAAC,IAAI,EAAEC,WAAY;IAAC,KAAK,EAAEI;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAGnD,CAAC;AAAA,GAtBKR,UAAU;AAAA,MAAVA,UAAU;AAwBhB,eAAeA,UAAU;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}