{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.dev/api';\n    this._imageBase = 'https://starwars-visualguide.com/assets/img';\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n      }\n      return await res.json();\n    };\n    this.getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n    this.getPerson = async id => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`);\n      return res.results.map(this._transformPlanet);\n    };\n    this.getPlanet = async id => {\n      const planet = await this.getResource(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n    this.getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`);\n      return res.results.map(this._transformStarship);\n    };\n    this.getStarship = async id => {\n      const starship = await this.getResource(`/starships/${id}/`);\n      return this._transformStarship(starship);\n    };\n    this.getPersonImage = _ref => {\n      let {\n        id\n      } = _ref;\n      return `${this._imageBase}/characters/${id}.jpg`;\n    };\n    this.getStarshipImage = _ref2 => {\n      let {\n        id\n      } = _ref2;\n      return `${this._imageBase}/starships/${id}.jpg`;\n    };\n    this.getPlanetImage = _ref3 => {\n      let {\n        id\n      } = _ref3;\n      return `${this._imageBase}/planets/${id}.jpg`;\n    };\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      };\n    };\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n}","map":{"version":3,"names":["SwapiService","_apiBase","_imageBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color"],"sources":["/Users/Kirill/Front-end/Next.js/starWars/src/services/swapi-service.js"],"sourcesContent":["export default class SwapiService {\n\n  _apiBase = 'https://swapi.dev/api';\n  _imageBase = 'https://starwars-visualguide.com/assets/img';\n\n  getResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` +\n        `, received ${res.status}`)\n    }\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n    return res.results\n      .map(this._transformPerson)\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n    return res.results\n      .map(this._transformPlanet)\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n    return res.results\n      .map(this._transformStarship)\n  };\n\n  getStarship = async (id) => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  };\n\n  getPersonImage = ({id}) => {\n    return `${this._imageBase}/characters/${id}.jpg`\n  };\n\n  getStarshipImage = ({id}) => {\n    return `${this._imageBase}/starships/${id}.jpg`\n  };\n\n  getPlanetImage = ({id}) => {\n    return `${this._imageBase}/planets/${id}.jpg`\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformPlanet = (planet) => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  };\n\n  _transformStarship = (starship) => {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    }\n  };\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}